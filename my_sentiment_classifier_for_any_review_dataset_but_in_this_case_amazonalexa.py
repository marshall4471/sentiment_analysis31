# -*- coding: utf-8 -*-
"""my_sentiment_classifier_for_any_review_dataset_but_in_this_case_amazonalexa.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wLvi7aeFm-lS6K-jo78GjIE4whivFujp
"""

import tensorflow_hub as hub

import tensorflow as tf

import pandas as pd

import numpy as np

from nltk.sentiment.vader import SentimentIntensityAnalyzer

from google.colab import files
fileupload = files.upload()

reviews = pd.read_csv('amazon_alexa.tsv', error_bad_lines=False)

import nltk

nltk.download('vader_lexicon')

reviews.head()

reviews = reviews.rename(columns={"rating\tdate\tvariation\tverified_reviews\tfeedback":"review_info"})

reviews.head()

sia = SentimentIntensityAnalyzer()

reviews['neg'] = reviews['review_info'].apply(lambda X:sia.polarity_scores(X)['neg'])

reviews['neu'] = reviews['review_info'].apply(lambda X:sia.polarity_scores(X)['neu'])

reviews['pos'] = reviews['review_info'].apply(lambda X:sia.polarity_scores(X)['pos'])

reviews['compound'] = reviews['review_info'].apply(lambda X:sia.polarity_scores(X)['compound'])

pos_review = [j for i, j in enumerate(reviews['review_info']) if reviews['compound'][i] > 0.2]

neu_review = [j for i, j in enumerate(reviews['review_info']) if reviews['compound'][i] >= 0.2]

neg_reviews = [j for i, j in enumerate(reviews['review_info']) if reviews['compound'][i] < -0.2]

print("Percentage of positive reviews: {}%".format(len(pos_review)*100/len(reviews['review_info'])))

print("Percentage of Negative reviews: {}%".format(len(neg_reviews)*100/len(reviews['review_info'])))

print("Percentage of Neutral reviews: {}%".format(len(neu_review)*100/len(reviews['review_info'])))

reviews

